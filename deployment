deployment setup
...............................
EFS 
  Create EFS filesystem 
  
...............................
TEMPLATE CONFIGURATION 
  TO ATTACH EFS AUTOMATICALLY TO NODE CREATED THROUGH LOAD AND INSTALL, ALLOW NECCESORY PORT ON FIREWALL. 
    FOR TEMPLATE :- {DEPLOYMENT-CONFIG IN TEMPLATE}
        steps to create template = create instance -> create image -> create template from instance
    - Use instance type: c5xlarge
    - Security-Group
    - Key-Pair
    - User data script 
    
...............................
SERVER SETUP :- [jenkines-server]
Instance type : c5large  Family: [......aws linux......]
  software or tools install  
    1) git 
    2) docker 
      yum install docker -y 
      systemctl start docker 
      systemctl enable docker 
    3) Jenkins

  login to dockerhub
      username:- masktv
      password:- mask@1234
    
  Packages :
    1) kubectl
      -  curl -LO "https://dl.k8s.io/release/v1.26.0/bin/linux/amd64/kubectl"
      -  chmod +x ./kubectl
      -  sudo mv ./kubectl /usr/local/bin/kubectl
      -  kubectl version --client

  b. Configure kubernetes user to perform kubernetes deployment task ----> if use role no need to configure user.
     - configure user with aws configure cammand.

  c. Configure cluster on cluster  
      using kubeconfig update cammand 
      -  aws eks --region <region> update-kubeconfig --name <cluster-name>

  d. Deploy ingress controller And service 

ATTACH EFS TO JENKINS EC2, AND SCHEDULE CRONJOB OF CMD TO ENTRE IN MASTER POD AND RUN MYSQLDUMP CMD TO TAKE BACKUP AND STORE IN EFS
...............................
JENKINES SERVER SETUP

Credential for jenkins pipeline
  github credential
  dockerhub credential
  kubernetes user credential

Necessory plugins on jenkines server  
  Pipeline-plugin
  git-plugin
  kubernetes-plugin
  docker plugin

For Automation project we will have to create 1 job and 1 or 2 pipeline.

  pipeline 1st :- kubernetes cluster configure, clone the repo from github, build the Dokcker image from db.dockerfile, docker push image on dockerhub, then deploy kubernetes secret.yaml, and deploy db.pv, db.pvc, db.deployment and db.service, db.hpa. 
  pipeline 2nd ;- kubernetes cluster configure, clone the repo from github, build the Dokcker image from app.dockerfile, docker push image on dockerhub, then deploy app.pv, app.pvc, app.deployment and app.service, ingress rule, app.hpa.




# problm facing withat that:
1) isnt connection establish between database and application pod. {ERROR --> php_network_getaddresses: getaddrinfo failed: Name or service not known}
2) if more than one replica try to deploy in sts dtabase not exicute in /var/lib/mysql.
