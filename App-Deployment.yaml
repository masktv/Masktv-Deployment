apiVersion: apps/v1
kind: Deployment
metadata:
  name: masktv-app-deployment
  labels: 
    app: masktv-app
spec:
  replicas: 1
  selector:
    matchLabels:
      app: masktv-app
  template:
    metadata:
      labels:
        app: masktv-app
    spec:
      containers:
        - name: masktv-app-container
          image: masktv/masktv:app-new
          imagePullPolicy: Always
          ports:
            - containerPort: 80
              name: http
              protocol: TCP
          resources:
            requests:
              cpu: 200m
              memory: 100Mi
          volumeMounts:
            - name: masktv-app-pv
              mountPath: /var/www/html   # CHECK ONCE 
          env:
            - name: MYSQL_HOST
              value: "http://my-service.my-namespace.svc.cluster.local"   # Service name of MySQL service
            - name: MYSQL_PORT
              value: "3306"
            - name: MYSQL_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: MYSQL_ROOT_PASSWORD
            - name: MYSQL_DATABASE
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database-secrets
                  key: MYSQL_PASSWORD
      #imagePullSecrets: # if dockerhub registry is private
        #- name: # Specify the image pull secret name if required
      volumes:
        - name: masktv-app-pv
          persistentVolumeClaim:
            claimName: masktv-app-pvc
  strategy: 
    type: RollingUpdate
    rollingUpdate: 
      maxSurge: 2
      maxUnavailable: 2
